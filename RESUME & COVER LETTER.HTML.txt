<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Career Compass</title>
  <meta name="description" content="The ultimate AI tool for generating professional resumes, cover letters, and career-boosting content.">
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
    :root {
      --primary-color: #4f46e5;
      --secondary-color: #6366f1;
      --accent-color: #3b82f6;
    }
    body { font-family: 'Inter', sans-serif; background-color: #f0f4f8; }
    .wrap { max-width: 920px; margin: 2rem auto; background-color: #ffffff; padding: 2.5rem; border-radius: 1.5rem; box-shadow: 0 12px 30px rgba(0, 0, 0, 0.1); }
    pre { white-space: pre-wrap; background-color: #f8fafc; padding: 1.5rem; border-radius: 1rem; border: 1px solid #e2e8f0; }
    label { font-weight: 600; color: #4b5563; }
    .small-muted { color: #6b7280; font-size: 0.875rem; }
    .input-field { @apply w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-[var(--accent-color)] focus:border-[var(--accent-color)] transition-all; }
    .generate-btn {
      @apply relative overflow-hidden w-full px-12 py-6 text-white text-xl font-black rounded-full transition-all duration-300 transform hover:scale-105 active:scale-95;
      background-color: red;
      box-shadow: 0 10px 20px rgba(255, 0, 0, 0.4);
    }
    .generate-btn::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: rgba(0, 0, 0, 0.1);
      transform: rotate(45deg) translate(-50%, -50%);
      transition: transform 0.5s ease;
    }
    .generate-btn:hover::before {
      transform: rotate(45deg) translate(0%, 0%);
    }
    .theme-btn { @apply w-8 h-8 rounded-full border-2 border-white shadow-md cursor-pointer transition-transform hover:scale-110; }
    .theme-btn.active { @apply border-4 border-indigo-500; }
    .language-select-btn { @apply px-6 py-3 rounded-full font-bold bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors; }
    .language-modal {
      @apply fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center z-50;
    }
    .modal-content { @apply bg-white p-8 rounded-2xl shadow-xl max-w-sm w-full; }
    .modal-btn { @apply w-full py-3 mb-3 rounded-xl text-white font-semibold transition-all hover:bg-gray-700 active:scale-95; }
    .modal-btn.active { @apply ring-4 ring-offset-2 ring-red-500; }
    .modal-btn-en { background-color: #4f46e5; }
    .modal-btn-ar { background-color: #a855f7; }
    .modal-btn-ur { background-color: #14b8a6; }
    [data-theme="indigo"] { --primary-color: #4f46e5; --secondary-color: #6366f1; --accent-color: #3b82f6; }
    [data-theme="teal"] { --primary-color: #14b8a6; --secondary-color: #2dd4bf; --accent-color: #0d9488; }
    [data-theme="purple"] { --primary-color: #a855f7; --secondary-color: #c084fc; --accent-color: #9333ea; }
    [data-theme="green"] { --primary-color: #22c55e; --secondary-color: #4ade80; --accent-color: #16a34a; }
    [data-theme="rose"] { --primary-color: #e11d48; --secondary-color: #f43f5e; --accent-color: #be123c; }
    [data-theme="gray"] { --primary-color: #6b7280; --secondary-color: #9ca3af; --accent-color: #4b5563; }
  </style>
</head>
<body class="p-6" data-theme="indigo">
  <div class="wrap">
    <h1 class="text-4xl font-extrabold text-gray-800 mb-2 text-center">Career Compass</h1>
    <p class="small-muted mb-8 text-center">Your ultimate AI guide for professional documents and career strategy. </p>

    <div class="mb-6">
      <label class="block mb-2">Choose your theme:</label>
      <div class="flex gap-4">
        <div class="theme-btn active" data-theme-color="indigo" style="background-color: #4f46e5;"></div>
        <div class="theme-btn" data-theme-color="teal" style="background-color: #14b8a6;"></div>
        <div class="theme-btn" data-theme-color="purple" style="background-color: #a855f7;"></div>
        <div class="theme-btn" data-theme-color="green" style="background-color: #22c55e;"></div>
        <div class="theme-btn" data-theme-color="rose" style="background-color: #e11d48;"></div>
        <div class="theme-btn" data-theme-color="gray" style="background-color: #6b7280;"></div>
      </div>
    </div>
    
    <div class="mb-6">
      <label class="block mb-2">Choose your language:</label>
      <button id="langSelectBtn" class="language-select-btn">Select Language</button>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <label for="fullName" class="block mb-2">Full Name</label>
        <input id="fullName" class="input-field" value="Muhammad Ali">
      </div>
      <div>
        <label for="targetRole" class="block mb-2">Job Title / Target Role</label>
        <input id="targetRole" class="input-field" value="CCTV operator">
      </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
      <div>
        <label for="years" class="block mb-2">Years of Experience</label>
        <input id="years" class="input-field" value="3 years">
      </div>
      <div>
        <label for="skills" class="block mb-2">Top Skills (comma separated)</label>
        <input id="skills" class="input-field" value="CCTV operator, MS office, auto cad, quantity survey, work engagement">
      </div>
    </div>

    <div class="mt-6">
      <label for="education" class="block mb-2">Education</label>
      <textarea id="education" rows="3" class="input-field" placeholder="E.g., Bachelor of Science in Information Technology - University of Example (2020-2024)"></textarea>
    </div>

    <div class="mt-6">
      <label for="achievements" class="block mb-2">Key Achievements / Responsibilities (one per line)</label>
      <textarea id="achievements" rows="4" class="input-field">Managed 24/7 surveillance to ensure security and prevent incidents.
Successfully identified and reported suspicious activities, leading to prompt resolution.
Collaborated with law enforcement to provide crucial video evidence for investigations.
Regularly maintained and calibrated CCTV equipment for optimal performance.
Analyzed footage to provide detailed reports on specific events and patterns.</textarea>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
      <div>
        <label for="jobDesc" class="block mb-2">Job Posting (optional)</label>
        <textarea id="jobDesc" rows="3" class="input-field" placeholder="Optional: Paste the job description here to tailor the cover letter."></textarea>
      </div>
      <div>
        <label for="companyName" class="block mb-2">Company Name (optional)</label>
        <input id="companyName" class="input-field" value="Techno">
      </div>
    </div>
    
    <div class="mt-6">
      <label for="projectName" class="block mb-2">Project Name (optional, for portfolio summary)</label>
      <input id="projectName" class="input-field" value="Integrated Surveillance & Safety Protocol Implementation">
    </div>

    <div class="mt-8 text-center">
      <button id="generateBtn" class="generate-btn">
        Launch My Career!
      </button>
    </div>
    
    <div id="loading" class="mt-6 text-center text-[var(--primary-color)] font-semibold" style="display:none;">
        <svg class="animate-spin h-6 w-6 mr-3 inline-block text-[var(--primary-color)]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Generating... This might take a moment.
    </div>
    <div id="error-message" class="mt-6 text-center p-4 bg-red-100 text-red-700 font-medium rounded-lg" style="display:none;"></div>

    <div id="results" class="mt-10" style="display:none;">
      <h3 class="text-2xl font-bold text-gray-800 mb-4">Your Generated Content</h3>
      <hr class="mb-6">

      <h4 class="text-xl font-semibold text-gray-700 mt-6">‚ú® Professional Branding Statement</h4>
      <pre id="brandingStatement" class="mt-2 text-base"></pre>

      <h4 class="text-xl font-semibold text-gray-700 mt-6">üìÑ Professional Bio</h4>
      <pre id="professionalBio" class="mt-2 text-base"></pre>

      <h4 class="text-xl font-semibold text-gray-700 mt-6">‚úÖ Detailed Resume</h4>
      <pre id="resumeLong" class="mt-2 text-base"></pre>
      
      <div class="mt-4">
        <button onclick="generatePDF()" class="px-4 py-2 bg-rose-500 text-white font-medium rounded-md shadow-md hover:bg-rose-600 transition-colors">
          Download Detailed Resume as PDF
        </button>
      </div>

      <h4 class="text-xl font-semibold text-gray-700 mt-6">‚úâÔ∏è Tailored Cover Letter</h4>
      <pre id="coverLetter" class="mt-2 text-base"></pre>
      
      <h4 class="text-xl font-semibold text-gray-700 mt-6">üíå Post-Interview Thank You Note</h4>
      <pre id="thankYouNote" class="mt-2 text-base"></pre>

      <h4 class="text-xl font-semibold text-gray-700 mt-6">‚ùì Common Interview Questions</h4>
      <pre id="interviewQuestions" class="mt-2 text-base"></pre>

      <h4 class="text-xl font-semibold text-gray-700 mt-6">üí™ Strengths & Weaknesses Statement</h4>
      <pre id="strengthsWeaknesses" class="mt-2 text-base"></pre>
      
      <h4 class="text-xl font-semibold text-gray-700 mt-6">üîó LinkedIn Summary</h4>
      <pre id="linkedIn" class="mt-2 text-base"></pre>
      
      <h4 class="text-xl font-semibold text-gray-700 mt-6">üó£Ô∏è Networking Pitch</h4>
      <pre id="networkingPitch" class="mt-2 text-base"></pre>
      
      <h4 class="text-xl font-semibold text-gray-700 mt-6">üí° Skill Gap Analysis</h4>
      <pre id="skillGaps" class="mt-2 text-base"></pre>

      <h4 class="text-xl font-semibold text-gray-700 mt-6">üìÅ Project Description</h4>
      <pre id="projectDescription" class="mt-2 text-base"></pre>
      
      <h4 class="text-xl font-semibold text-gray-700 mt-6">üîç ATS Keywords</h4>
      <pre id="atsKeywords" class="mt-2 text-base"></pre>
      
      <h4 class="text-xl font-semibold text-gray-700 mt-6">üéØ Why I'm a Good Fit</h4>
      <pre id="whyUs" class="mt-2 text-base"></pre>

      <div class="mt-6 text-center">
        <button onclick="copyAll()" class="px-6 py-2 border-2 border-[var(--primary-color)] text-[var(--primary-color)] font-medium rounded-full hover:bg-[var(--primary-color)] hover:text-white transition-colors">
          Copy All to Clipboard
        </button>
        <span id="copied" class="ml-4 text-green-600 font-bold hidden">Copied!</span>
      </div>
    </div>
  </div>

  <!-- Language Selection Modal -->
  <div id="languageModal" class="language-modal hidden">
    <div class="modal-content">
      <h3 class="text-xl font-bold text-gray-800 mb-4 text-center">Select your Language</h3>
      <button class="modal-btn modal-btn-en active" data-lang="en">English</button>
      <button class="modal-btn modal-btn-ar" data-lang="ar">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</button>
      <button class="modal-btn modal-btn-ur" data-lang="ur">ÿßÿ±ÿØŸà</button>
    </div>
  </div>

  <script>
    const generateBtn = document.getElementById('generateBtn');
    const langSelectBtn = document.getElementById('langSelectBtn');
    const languageModal = document.getElementById('languageModal');
    let selectedLang = 'en';

    generateBtn.addEventListener('click', generateAll);
    langSelectBtn.addEventListener('click', () => {
      languageModal.classList.remove('hidden');
    });

    document.querySelectorAll('.modal-btn').forEach(button => {
      button.addEventListener('click', () => {
        selectedLang = button.getAttribute('data-lang');
        document.querySelectorAll('.modal-btn').forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        languageModal.classList.add('hidden');
        langSelectBtn.textContent = button.textContent;
      });
    });

    document.querySelectorAll('.theme-btn').forEach(button => {
        button.addEventListener('click', () => {
            document.body.setAttribute('data-theme', button.getAttribute('data-theme-color'));
            document.querySelectorAll('.theme-btn').forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
        });
    });
    
    async function generateAll() {
      const fullName = document.getElementById('fullName').value.trim();
      const targetRole = document.getElementById('targetRole').value.trim();
      const years = document.getElementById('years').value.trim();
      const skills = document.getElementById('skills').value.trim();
      const achievements = document.getElementById('achievements').value.trim();
      const jobDesc = document.getElementById('jobDesc').value.trim();
      const companyName = document.getElementById('companyName').value.trim();
      const projectName = document.getElementById('projectName').value.trim();
      const education = document.getElementById('education').value.trim();
    
      if (!fullName || !targetRole) {
        showError('Please enter at least your full name and target role.');
        return;
      }
    
      const loading = document.getElementById('loading');
      const resultsDiv = document.getElementById('results');
      const errorMessageDiv = document.getElementById('error-message');
    
      generateBtn.disabled = true;
      loading.style.display = 'block';
      resultsDiv.style.display = 'none';
      errorMessageDiv.style.display = 'none';
    
      try {
        const promptText = `
          As a professional career advisor and content generator, create a structured JSON object to help a job seeker.
          The JSON object must contain the following keys and values based on the user's provided information.

          All content must be generated in the language specified by the user.

          1.  'brandingStatement': A concise, one-sentence professional branding statement.
          2.  'professionalBio': A detailed, paragraph-based professional biography (around 100-150 words) suitable for a "About Me" section on a professional website.
          3.  'resumeLong': A detailed, professional resume (around 300-400 words) with sections for 'Professional Summary', 'Skills', 'Key Achievements', and 'Experience'. The content should be well-formatted with markdown-style headings and bullet points.
          4.  'coverLetter': A tailored and professional cover letter (around 200-250 words) addressed to 'Hiring Manager'. Integrate the user's skills and achievements. If a job description is provided, show alignment with its requirements.
          5.  'interviewQuestions': An array of 5-10 common and insightful interview questions for the specified target role.
          6.  'linkedInSummary': A one-paragraph, professional summary suitable for a LinkedIn profile.
          7.  'networkingPitch': A concise, professional networking pitch (3-4 sentences) for networking events.
          8.  'thankYouNote': A professional and personalized thank you note (around 50-75 words) suitable to be sent after a job interview.
          9.  'strengthsWeaknesses': A combined paragraph (around 100 words) that outlines professional strengths and discusses a weakness with a plan for improvement.
          10. 'skillGaps': A list of key skills the user might need to learn or develop further to excel in the target role, based on their provided skills. Format as a bulleted list.
          11. 'projectDescription': A 100-word summary of the user's project, including key technologies and impact, if a project name is provided.
          12. 'atsKeywords': An array of at least 20 keywords for an Applicant Tracking System (ATS). Combine keywords from the user's skills and the provided job description.
          13. 'whyUs': A compelling paragraph (50-75 words) explaining why the user would be a good fit for the company, specifically mentioning the company name if provided. If no company name is provided, use a generic statement about an ideal company.
          14. 'educationSummary': A formatted summary of the user's educational background, including degrees and institutions.

          User Information:
          - Full Name: ${fullName}
          - Target Role: ${targetRole}
          - Years of Experience: ${years}
          - Top Skills: ${skills}
          - Key Achievements: ${achievements}
          - Education: ${education || 'None provided'}
          - Job Posting Details (optional): ${jobDesc || 'None provided'}
          - Company Name (optional): ${companyName || 'None provided'}
          - Project Name (optional): ${projectName || 'None provided'}
          - Language: ${selectedLang}
        `;
    
        const payload = {
          contents: [{ parts: [{ text: promptText }] }],
          generationConfig: {
            responseMimeType: "application/json",
            responseSchema: {
              type: "OBJECT",
              properties: {
                "brandingStatement": { "type": "STRING" },
                "professionalBio": { "type": "STRING" },
                "resumeLong": { "type": "STRING" },
                "coverLetter": { "type": "STRING" },
                "interviewQuestions": { "type": "ARRAY", "items": { "type": "STRING" } },
                "linkedInSummary": { "type": "STRING" },
                "networkingPitch": { "type": "STRING" },
                "thankYouNote": { "type": "STRING" },
                "strengthsWeaknesses": { "type": "STRING" },
                "skillGaps": { "type": "STRING" },
                "projectDescription": { "type": "STRING" },
                "atsKeywords": { "type": "ARRAY", "items": { "type": "STRING" } },
                "whyUs": { "type": "STRING" },
                "educationSummary": { "type": "STRING" }
              }
            }
          }
        };
    
        const apiKey = "";
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;
    
        const response = await fetch(apiUrl, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        });
    
        if (!response.ok) {
          throw new Error(`API call failed with status: ${response.status}`);
        }
    
        const result = await response.json();
        if (result.candidates && result.candidates.length > 0 && result.candidates[0].content) {
          const jsonString = result.candidates[0].content.parts[0].text;
          const parsedData = JSON.parse(jsonString);
    
          document.getElementById('brandingStatement').textContent = parsedData.brandingStatement;
          document.getElementById('professionalBio').textContent = parsedData.professionalBio;
          document.getElementById('resumeLong').textContent = parsedData.resumeLong;
          document.getElementById('coverLetter').textContent = parsedData.coverLetter;
          document.getElementById('interviewQuestions').textContent = parsedData.interviewQuestions.map((q, i) => `${i + 1}. ${q}`).join('\n');
          document.getElementById('linkedIn').textContent = parsedData.linkedInSummary;
          document.getElementById('networkingPitch').textContent = parsedData.networkingPitch;
          document.getElementById('thankYouNote').textContent = parsedData.thankYouNote;
          document.getElementById('strengthsWeaknesses').textContent = parsedData.strengthsWeaknesses;
          document.getElementById('skillGaps').textContent = parsedData.skillGaps;
          document.getElementById('projectDescription').textContent = parsedData.projectDescription;
          document.getElementById('atsKeywords').textContent = parsedData.atsKeywords.join(', ');
          document.getElementById('whyUs').textContent = parsedData.whyUs;
    
          resultsDiv.style.display = 'block';
    
          window._resume_all = {
            branding: parsedData.brandingStatement,
            bio: parsedData.professionalBio,
            long: parsedData.resumeLong,
            cover: parsedData.coverLetter,
            questions: parsedData.interviewQuestions,
            linkedIn: parsedData.linkedInSummary,
            networking: parsedData.networkingPitch,
            thankYou: parsedData.thankYouNote,
            strengthsWeaknesses: parsedData.strengthsWeaknesses,
            gaps: parsedData.skillGaps,
            project: parsedData.projectDescription,
            atsKeywords: parsedData.atsKeywords,
            whyUs: parsedData.whyUs,
            educationSummary: parsedData.educationSummary
          };
        } else {
          throw new Error('No content returned from the API.');
        }
    
      } catch (e) {
        showError(`An error occurred: ${e.message}. Please try again.`);
        console.error(e);
      } finally {
        generateBtn.disabled = false;
        loading.style.display = 'none';
      }
    }
    
    function copyAll() {
      if (!window._resume_all) return;
      const out = [
        '--- Professional Branding Statement ---', '', window._resume_all.branding, '',
        '--- Professional Bio ---', '', window._resume_all.bio, '',
        '--- Detailed Resume ---', '', window._resume_all.long, '',
        '--- Cover Letter ---', '', window._resume_all.cover, '',
        '--- Education Summary ---', '', window._resume_all.educationSummary, '',
        '--- Post-Interview Thank You Note ---', '', window._resume_all.thankYou, '',
        '--- Interview Questions ---', '', window._resume_all.questions.map((q, i) => `${i + 1}. ${q}`).join('\n'), '',
        '--- Strengths & Weaknesses Statement ---', '', window._resume_all.strengthsWeaknesses, '',
        '--- LinkedIn Summary ---', '', window._resume_all.linkedIn, '',
        '--- Networking Pitch ---', '', window._resume_all.networking, '',
        '--- Skill Gap Analysis ---', '', window._resume_all.gaps, '',
        '--- Project Description ---', '', window._resume_all.project, '',
        '--- ATS Keywords ---', '', window._resume_all.atsKeywords.join(', '), '',
        '--- Why I\'m a Good Fit ---', '', window._resume_all.whyUs
      ].join('\n');
      
      const textArea = document.createElement("textarea");
      textArea.value = out;
      textArea.style.position = "fixed";
      textArea.style.left = "-9999px";
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      
      try {
        const successful = document.execCommand('copy');
        if (successful) {
          const copiedSpan = document.getElementById('copied');
          copiedSpan.classList.remove('hidden');
          setTimeout(() => copiedSpan.classList.add('hidden'), 1500);
        } else {
          showError("Failed to copy text. Please try again or copy manually.");
        }
      } catch (err) {
        showError("Failed to copy text. Error: " + err);
      } finally {
        document.body.removeChild(textArea);
      }
    }

    function generatePDF() {
      if (!window._resume_all || !window._resume_all.long) {
        showError('Please generate the resume content first.');
        return;
      }
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF('p', 'pt', 'a4');
      const content = document.getElementById('resumeLong').innerText;
      
      const lines = doc.splitTextToSize(content, 550);
      
      doc.setFontSize(14);
      doc.text(lines, 30, 30);
      doc.save('Detailed_Resume.pdf');
    }

    function showError(message) {
      const errorMessageDiv = document.getElementById('error-message');
      errorMessageDiv.textContent = message;
      errorMessageDiv.style.display = 'block';
    }
  </script>
</body>
</html>
